!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=8)}([function(e,t,r){var n;!function(o){"use strict";var i,s=20,a=1,d=1e6,c=-7,u=21,l="[big.js] ",p=l+"Invalid ",m=p+"decimal places",h=p+"rounding mode",f={},b=void 0,v=/^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;function g(e,t,r,n){var o=e.c,i=e.e+t+1;if(i<o.length){if(1===r)n=o[i]>=5;else if(2===r)n=o[i]>5||5==o[i]&&(n||i<0||o[i+1]!==b||1&o[i-1]);else if(3===r)n=n||!!o[0];else if(n=!1,0!==r)throw Error(h);if(i<1)o.length=1,n?(e.e=-t,o[0]=1):o[0]=e.e=0;else{if(o.length=i--,n)for(;++o[i]>9;)o[i]=0,i--||(++e.e,o.unshift(1));for(i=o.length;!o[--i];)o.pop()}}else if(r<0||r>3||r!==~~r)throw Error(h);return e}function y(e,t,r,n){var o,i,s=e.constructor,a=!e.c[0];if(r!==b){if(r!==~~r||r<(3==t)||r>d)throw Error(3==t?p+"precision":m);for(r=n-(e=new s(e)).e,e.c.length>++n&&g(e,r,s.RM),2==t&&(n=e.e+r+1);e.c.length<n;)e.c.push(0)}if(o=e.e,r=(i=e.c.join("")).length,2!=t&&(1==t||3==t&&n<=o||o<=s.NE||o>=s.PE))i=i.charAt(0)+(r>1?"."+i.slice(1):"")+(o<0?"e":"e+")+o;else if(o<0){for(;++o;)i="0"+i;i="0."+i}else if(o>0)if(++o>r)for(o-=r;o--;)i+="0";else o<r&&(i=i.slice(0,o)+"."+i.slice(o));else r>1&&(i=i.charAt(0)+"."+i.slice(1));return e.s<0&&(!a||4==t)?"-"+i:i}f.abs=function(){var e=new this.constructor(this);return e.s=1,e},f.cmp=function(e){var t,r=this,n=r.c,o=(e=new r.constructor(e)).c,i=r.s,s=e.s,a=r.e,d=e.e;if(!n[0]||!o[0])return n[0]?i:o[0]?-s:0;if(i!=s)return i;if(t=i<0,a!=d)return a>d^t?1:-1;for(s=(a=n.length)<(d=o.length)?a:d,i=-1;++i<s;)if(n[i]!=o[i])return n[i]>o[i]^t?1:-1;return a==d?0:a>d^t?1:-1},f.div=function(e){var t=this,r=t.constructor,n=t.c,o=(e=new r(e)).c,i=t.s==e.s?1:-1,s=r.DP;if(s!==~~s||s<0||s>d)throw Error(m);if(!o[0])throw Error("[big.js] Division by zero");if(!n[0])return new r(0*i);var a,c,u,l,p,h=o.slice(),f=a=o.length,v=n.length,y=n.slice(0,a),w=y.length,S=e,E=S.c=[],$=0,P=s+(S.e=t.e-e.e)+1;for(S.s=i,i=P<0?0:P,h.unshift(0);w++<a;)y.push(0);do{for(u=0;u<10;u++){if(a!=(w=y.length))l=a>w?1:-1;else for(p=-1,l=0;++p<a;)if(o[p]!=y[p]){l=o[p]>y[p]?1:-1;break}if(!(l<0))break;for(c=w==a?o:h;w;){if(y[--w]<c[w]){for(p=w;p&&!y[--p];)y[p]=9;--y[p],y[w]+=10}y[w]-=c[w]}for(;!y[0];)y.shift()}E[$++]=l?u:++u,y[0]&&l?y[w]=n[f]||0:y=[n[f]]}while((f++<v||y[0]!==b)&&i--);return E[0]||1==$||(E.shift(),S.e--),$>P&&g(S,s,r.RM,y[0]!==b),S},f.eq=function(e){return!this.cmp(e)},f.gt=function(e){return this.cmp(e)>0},f.gte=function(e){return this.cmp(e)>-1},f.lt=function(e){return this.cmp(e)<0},f.lte=function(e){return this.cmp(e)<1},f.minus=f.sub=function(e){var t,r,n,o,i=this,s=i.constructor,a=i.s,d=(e=new s(e)).s;if(a!=d)return e.s=-d,i.plus(e);var c=i.c.slice(),u=i.e,l=e.c,p=e.e;if(!c[0]||!l[0])return l[0]?(e.s=-d,e):new s(c[0]?i:0);if(a=u-p){for((o=a<0)?(a=-a,n=c):(p=u,n=l),n.reverse(),d=a;d--;)n.push(0);n.reverse()}else for(r=((o=c.length<l.length)?c:l).length,a=d=0;d<r;d++)if(c[d]!=l[d]){o=c[d]<l[d];break}if(o&&(n=c,c=l,l=n,e.s=-e.s),(d=(r=l.length)-(t=c.length))>0)for(;d--;)c[t++]=0;for(d=t;r>a;){if(c[--r]<l[r]){for(t=r;t&&!c[--t];)c[t]=9;--c[t],c[r]+=10}c[r]-=l[r]}for(;0===c[--d];)c.pop();for(;0===c[0];)c.shift(),--p;return c[0]||(e.s=1,c=[p=0]),e.c=c,e.e=p,e},f.mod=function(e){var t,r=this,n=r.constructor,o=r.s,i=(e=new n(e)).s;if(!e.c[0])throw Error("[big.js] Division by zero");return r.s=e.s=1,t=1==e.cmp(r),r.s=o,e.s=i,t?new n(r):(o=n.DP,i=n.RM,n.DP=n.RM=0,r=r.div(e),n.DP=o,n.RM=i,this.minus(r.times(e)))},f.plus=f.add=function(e){var t,r=this,n=r.constructor,o=r.s,i=(e=new n(e)).s;if(o!=i)return e.s=-i,r.minus(e);var s=r.e,a=r.c,d=e.e,c=e.c;if(!a[0]||!c[0])return c[0]?e:new n(a[0]?r:0*o);if(a=a.slice(),o=s-d){for(o>0?(d=s,t=c):(o=-o,t=a),t.reverse();o--;)t.push(0);t.reverse()}for(a.length-c.length<0&&(t=c,c=a,a=t),o=c.length,i=0;o;a[o]%=10)i=(a[--o]=a[o]+c[o]+i)/10|0;for(i&&(a.unshift(i),++d),o=a.length;0===a[--o];)a.pop();return e.c=a,e.e=d,e},f.pow=function(e){var t=this,r=new t.constructor(1),n=r,o=e<0;if(e!==~~e||e<-1e6||e>1e6)throw Error(p+"exponent");for(o&&(e=-e);1&e&&(n=n.times(t)),e>>=1;)t=t.times(t);return o?r.div(n):n},f.round=function(e,t){var r=this.constructor;if(e===b)e=0;else if(e!==~~e||e<-d||e>d)throw Error(m);return g(new r(this),e,t===b?r.RM:t)},f.sqrt=function(){var e,t,r,n=this,o=n.constructor,i=n.s,s=n.e,a=new o(.5);if(!n.c[0])return new o(n);if(i<0)throw Error(l+"No square root");0===(i=Math.sqrt(n+""))||i===1/0?((t=n.c.join("")).length+s&1||(t+="0"),s=((s+1)/2|0)-(s<0||1&s),e=new o(((i=Math.sqrt(t))==1/0?"1e":(i=i.toExponential()).slice(0,i.indexOf("e")+1))+s)):e=new o(i),s=e.e+(o.DP+=4);do{r=e,e=a.times(r.plus(n.div(r)))}while(r.c.slice(0,s).join("")!==e.c.slice(0,s).join(""));return g(e,o.DP-=4,o.RM)},f.times=f.mul=function(e){var t,r=this,n=r.constructor,o=r.c,i=(e=new n(e)).c,s=o.length,a=i.length,d=r.e,c=e.e;if(e.s=r.s==e.s?1:-1,!o[0]||!i[0])return new n(0*e.s);for(e.e=d+c,s<a&&(t=o,o=i,i=t,c=s,s=a,a=c),t=new Array(c=s+a);c--;)t[c]=0;for(d=a;d--;){for(a=0,c=s+d;c>d;)a=t[c]+i[d]*o[c-d-1]+a,t[c--]=a%10,a=a/10|0;t[c]=(t[c]+a)%10}for(a?++e.e:t.shift(),d=t.length;!t[--d];)t.pop();return e.c=t,e},f.toExponential=function(e){return y(this,1,e,e)},f.toFixed=function(e){return y(this,2,e,this.e+e)},f.toPrecision=function(e){return y(this,3,e,e-1)},f.toString=function(){return y(this)},f.valueOf=f.toJSON=function(){return y(this,4)},(i=function e(){function t(r){var n=this;if(!(n instanceof t))return r===b?e():new t(r);r instanceof t?(n.s=r.s,n.e=r.e,n.c=r.c.slice()):function(e,t){var r,n,o;if(0===t&&1/t<0)t="-0";else if(!v.test(t+=""))throw Error(p+"number");for(e.s="-"==t.charAt(0)?(t=t.slice(1),-1):1,(r=t.indexOf("."))>-1&&(t=t.replace(".","")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),o=t.length,n=0;n<o&&"0"==t.charAt(n);)++n;if(n==o)e.c=[e.e=0];else{for(;o>0&&"0"==t.charAt(--o););for(e.e=r-n-1,e.c=[],r=0;n<=o;)e.c[r++]=+t.charAt(n++)}}(n,r),n.constructor=t}return t.prototype=f,t.DP=s,t.RM=a,t.NE=c,t.PE=u,t.version="5.2.2",t}()).default=i.Big=i,void 0===(n=function(){return i}.call(t,r,t,e))||(e.exports=n)}()},function(e,t,r){"use strict";(function(e,n){var o,i=r(2);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:n;var s=Object(i.a)(o);t.a=s}).call(this,r(6),r(7)(e))},function(e,t,r){"use strict";function n(e){var t,r=e.Symbol;return"function"==typeof r?r.observable?t=r.observable:(t=r("observable"),r.observable=t):t="@@observable",t}r.d(t,"a",function(){return n})},function(e){e.exports={"confirm.no":"Non","confirm.yes":"Oui",customer:"Client","customer.card.number":"NumÃ©ro de carte","customer.phone":"TÃ©lÃ©phone","erply.api.network.error":"Pas de connection internet","order.action.add.back":"Rajouter","order.action.confirm":"Confirmer","order.action.finish.picking":"Commande prÃªte","order.action.heading":"Action","order.action.move.history":"Ajouter Ã  lâ€™historique","order.action.remove":"Retirer","order.action.save":"Sauvegarder","order.action.start.picking":"PrÃ©parer","order.date":"Date","order.date.created":"Date de crÃ©ation","order.delivery.date.time":"Date et heure de livraison","order.pickup.type":"Type de ramassez","order.edit.actions":"Actions","order.edit.title":"Modifier la commande nÂ°{number}","order.edit.confirmation.title":"Confirmation de modification de la commande","order.edit.confirmation.plu.remove":"Vous avez retirÃ© le(s) PLU(s) {pluList}.","order.edit.confirmation.order.cancelled":"La commande sera <strong>annulÃ©e</strong>.","order.edit.confirmation.confirmation.text":"Voulez-vous continuer?","order.invalid.cashinvoice.error":"Commande dâ€™entreprise non valide. Aucun paiement nâ€™a Ã©tÃ© fait, impossible dâ€™effectuer un retour","order.notes":"Notes","order.number":"NumÃ©ro","order.picking.text":"Tous les produits Ã©taient-ils disponibles?","order.picking.title":"Confirmation de rÃ©ception","order.pickup.date.time":"Date et heure de ramassage","order.pickup.status.cancelled":"ANNULÃ‰E","order.pickup.status.confirmed":"CONFIRMÃ‰E","order.pickup.status.delivered":"LIVRÃ‰E","order.pickup.status.new":"NOUVELLE","order.pickup.status.picked":"RAMASSÃ‰E","order.pickup.status.picking":"EN COURS DE PREPARATION","order.print.action.failure":"Lâ€™impression de la commande a Ã©chouÃ©","order.print.action.progress":"Impression du reÃ§u de la commande en cours","order.print.generate":"CrÃ©ation du modÃ¨le de document en cours","order.print.generate.error":"Ã‰chec de la gÃ©nÃ©ration du modÃ¨le","order.print.notes":"Notes: {notes}","order.print.receipts.fetch.error":"Could not retrieve receipts","order.print.receipts.missing":"No receipts found for order","order.print.title":"Liste de prÃ©paration","order.reference.no":"NÂ° de rÃ©fÃ©rence","order.return.documents":"Documents de retour","order.row.price":"Prix","order.row.product.code":"Code produit","order.row.product.description":"Description du produit","order.row.product.name":"Nom du produit","order.row.quantity":"QuantitÃ©","order.row.total":"Total","order.save.action.error":"Impossible de mettre Ã  jour la commande, erreur : {error}","order.save.action.text":"Mise Ã  jour de la commande","order.status":"Ã‰tat","order.subtotal.with.value":"Sub-total: {value}","order.tax.total.with.value":"Tax: {value}","order.total.with.value":"Total: {value}","order.with.number":"Commande nÂ°{number}","order.fetch.customer.info.error":"Impossible d'obtenir les informations sur le client","orders.fetch.recent.orders":"Chargement des commandes rÃ©centes","orders.fetch.recent.orders.error":"Impossible de charger les commandes rÃ©centes, erreur : {error}","orders.fetch.unprocessed.orders":"Chargement des commandes","orders.fetch.unprocessed.orders.error":"Impossible de charger les commandes, erreur : {error}","orders.list.refresh.button":"RafraÃ®chir","orders.list.title":"Commandes","orders.tab.history":"Historique","orders.tab.unfinished":"En cours","orders.update.new.orders":"Nouvelles commandes"}},function(e){e.exports={"confirm.no":"No","confirm.yes":"Yes",customer:"Customer","customer.card.number":"Customer card number","customer.phone":"Phone","erply.api.network.error":"No internet connection","order.action.add.back":"Add back","order.action.confirm":"Confirm","order.action.finish.picking":"Finish picking","order.action.heading":"Action","order.action.move.history":"Move to history","order.action.remove":"Remove","order.action.save":"Save","order.action.start.picking":"Start picking","order.date":"Date","order.date.created":"Date created","order.delivery.date.time":"Delivery date time","order.pickup.type":"Pickup type","order.edit.actions":"Actions","order.edit.title":"Edit order #{number}","order.edit.confirmation.title":"Edit order confirmation","order.edit.confirmation.plu.remove":"You have removed PLU(s) {pluList}.","order.edit.confirmation.order.cancelled":"The order will be <strong>cancelled</strong>.","order.edit.confirmation.confirmation.text":"Do you want to continue?","order.invalid.cashinvoice.error":"Invalid company order. No payments have been made, cannot make a return.","order.notes":"Notes","order.number":"Number","order.picking.text":"Did all products exist?","order.picking.title":"Picking confirmation","order.pickup.date.time":"Pickup date time","order.pickup.status.cancelled":"CANCELLED","order.pickup.status.confirmed":"CONFIRMED","order.pickup.status.delivered":"DELIVERED","order.pickup.status.new":"NEW","order.pickup.status.picked":"PICKED","order.pickup.status.picking":"PICKING","order.print.action.failure":"Failed to print order","order.print.action.progress":"Printing order receipt","order.print.generate":"Generating template","order.print.generate.error":"Failed to generate template","order.print.notes":"Notes: {notes}","order.print.receipts.fetch.error":"Could not retrieve receipts","order.print.receipts.missing":"No receipts found for order","order.print.title":"Picking list","order.reference.no":"Reference no.","order.return.documents":"Return documents","order.row.price":"Price","order.row.product.code":"Product code","order.row.product.description":"Product description","order.row.product.name":"Product name","order.row.quantity":"Quantity","order.row.total":"Total","order.save.action.error":"Failed to update the order, error: {error}","order.save.action.text":"Updating order","order.status":"Status","order.subtotal.with.value":"Sub-total: {value}","order.tax.total.with.value":"Tax: {value}","order.total.with.value":"Total: {value}","order.with.number":"Order #{number}","order.fetch.customer.info.error":"Failed to get customer information","orders.fetch.recent.orders":"Getting recent orders","orders.fetch.recent.orders.error":"Failed to fetch recent orders, error: {error}","orders.fetch.unprocessed.orders":"Loading orders","orders.fetch.unprocessed.orders.error":"Failed to load orders, error: {error}","orders.list.refresh.button":"Refresh","orders.list.title":"Order Notification Manager","orders.tab.history":"History","orders.tab.unfinished":"Unfinished","orders.update.new.orders":"New orders"}},function(e,t){!function(e){e.fn.stupidtable=function(t){return this.each(function(){var r=e(this);t=t||{},t=e.extend({},e.fn.stupidtable.default_sort_fns,t),r.data("sortFns",t),r.stupidtable_build(),r.on("click.stupidtable","thead th",function(){e(this).stupidsort()}),r.find("th[data-sort-onload=yes]").eq(0).stupidsort()})},e.fn.stupidtable.default_settings={should_redraw:function(e){return!0},will_manually_build_table:!1},e.fn.stupidtable.dir={ASC:"asc",DESC:"desc"},e.fn.stupidtable.default_sort_fns={int:function(e,t){return parseInt(e,10)-parseInt(t,10)},float:function(e,t){return parseFloat(e)-parseFloat(t)},string:function(e,t){return e.toString().localeCompare(t.toString())},"string-ins":function(e,t){return e=e.toString().toLocaleLowerCase(),t=t.toString().toLocaleLowerCase(),e.localeCompare(t)}},e.fn.stupidtable_settings=function(t){return this.each(function(){var r=e(this),n=e.extend({},e.fn.stupidtable.default_settings,t);r.stupidtable.settings=n})},e.fn.stupidsort=function(r){var a=e(this),d=a.data("sort")||null;if(null!==d){e.fn.stupidtable.dir;var c=a.closest("table"),u={$th:a,$table:c,datatype:d};return c.stupidtable.settings||(c.stupidtable.settings=e.extend({},e.fn.stupidtable.default_settings)),u.compare_fn=c.data("sortFns")[d],u.th_index=s(u),u.sort_dir=i(r,u),a.data("sort-dir",u.sort_dir),c.trigger("beforetablesort",{column:u.th_index,direction:u.sort_dir,$th:a}),c.css("display"),setTimeout(function(){c.stupidtable.settings.will_manually_build_table||c.stupidtable_build();var e=t(u),r=n(e,u);c.stupidtable.settings.should_redraw(u)&&(c.children("tbody").append(r),o(u),c.trigger("aftertablesort",{column:u.th_index,direction:u.sort_dir,$th:a}),c.css("display"))},10),a}},e.fn.updateSortVal=function(t){var r=e(this);return r.is("[data-sort-value]")&&r.attr("data-sort-value",t),r.data("sort-value",t),r},e.fn.stupidtable_build=function(){return this.each(function(){var t=e(this),r=[];t.children("tbody").children("tr").each(function(t,n){var o={$tr:e(n),columns:[],index:t};e(n).children("td").each(function(t,r){var n=e(r).data("sort-value");if(void 0===n){var i=e(r).text();e(r).data("sort-value",i),n=i}o.columns.push(n)}),r.push(o)}),t.data("stupidsort_internaltable",r)})};var t=function(t){var n,o=t.$table.data("stupidsort_internaltable"),i=t.th_index,s=t.$th.data("sort-multicolumn");n=s?s.split(","):[];var a=e.map(n,function(e,n){return r(t.$table,e)});return o.sort(function(e,r){for(var n=a.slice(0),o=t.compare_fn(e.columns[i],r.columns[i]);0===o&&n.length;){var s=n[0],d=s.$e.data("sort");o=(0,t.$table.data("sortFns")[d])(e.columns[s.index],r.columns[s.index]),n.shift()}return 0===o?e.index-r.index:o}),t.sort_dir!=e.fn.stupidtable.dir.ASC&&o.reverse(),o},r=function(e,t){var r,n=e.find("th"),o=parseInt(t,10);return o||0===o?r=n.eq(o):(r=n.siblings("#"+t),o=n.index(r)),{index:o,$e:r}},n=function(t,r){var n=e.map(t,function(e,t){return[[e.columns[r.th_index],e.$tr,t]]});return r.column=n,e.map(t,function(e){return e.$tr})},o=function(e){var t=e.$table,r=e.$th,n=r.data("sort-dir");e.th_index;t.find("th").data("sort-dir",null).removeClass("sorting-desc sorting-asc"),r.data("sort-dir",n).addClass("sorting-"+n)},i=function(t,r){var n,o=r.$th,i=e.fn.stupidtable.dir;return t?n=t:(n=t||o.data("sort-default")||i.ASC,o.data("sort-dir")&&(n=o.data("sort-dir")===i.ASC?i.DESC:i.ASC)),n},s=function(t){var r=0,n=t.$th.index();return t.$th.parents("tr").find("th").slice(0,n).each(function(){var t=e(this).attr("colspan")||1;r+=parseInt(t,10)}),r}}(jQuery)},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,r){"use strict";r.r(t);r(5);function n(e){Template[e.viewType]=window.onm.views[e.viewType].render();const t=TSPOS.UI.openView(e);return t.on("close",window.onm.views[e.viewType].onClose||(()=>{TSPOS.UI.closeCurrentView()})),t}function o(e){return Template[e.viewType]=e.content,TSPOS.UI.openView(e)}const i=Object.freeze({NEW:"NEW",PICKING:"PICKING",PICKED:"PICKED",CONFIRMED:"CONFIRMED",DELIVERED:"DELIVERED",CANCELLED:"CANCELLED"}),s="onm-unprocessed-orders-list",a="onm-view-unprocessed-order",d="onm-picking-confirmation",c="onm-edit-unprocessed-order",u="onm-finished-orders-list";class l{constructor(e){this.store=e,this.html=$('\n      <li>\n        <span class="sync pointer" id="onm-notification-button-container" style="top: 8px;">\n          <span class="btn-badge" style="top: 10px; left: 12px; z-index: 1">0</span>\n          <span class="navbar-icon icon_bag_alt text-24px flip-horizontal" id="onm-notification-button"></span>\n        </span>\n      </li>\n    '),TSPOS.EventManager.addEventListener("onm_after_orders_update",this.render.bind(this))}render(){const e=this.store.getState(),t=e.unprocessedOrders.orders.filter(e=>e.getAttributeValue("pickupStatus")===i.NEW);return this.html.find("#onm-notification-button-container").off("click"),t.length>0?this.html.find("#onm-notification-button").css("color","red"):this.html.find("#onm-notification-button").css("color","white"),this.html.find("#onm-notification-button-container .btn-badge").text(e.unprocessedOrders.orders.length),this.html.find("#onm-notification-button-container").on("click",()=>this.handleClick()),this.html}handleClick(){0!==$(".app-header-nav li > a.icon_cog.active").length?window._ErplyTransitionTo("index").then(()=>{n({viewType:s,dismiss:!0,modal:!1})}):n({viewType:s,dismiss:!0,modal:!1})}}var p=r(1),m=function(){return Math.random().toString(36).substring(7).split("").join(".")},h={INIT:"@@redux/INIT"+m(),REPLACE:"@@redux/REPLACE"+m(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+m()}};function f(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function b(e,t){var r=t&&t.type;return"Given "+(r&&'action "'+String(r)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function v(e,t,r){const n=function(e,t){if(!t.hasOwnProperty("attributes"))return-1;for(let r=0;r<t.attributes.length;r++)if(t.attributes[r].attributeName===e)return r;return-1}(e,r);return-1!==n&&(r.attributes[n].attributeValue=t),r}const g="UPDATE_ORDERS",y="SELECT_ORDER",w="UPDATE_ORDER_STATUS",S="PICK_ORDER";function E(e){return{type:g,orders:e}}function P(e){return{type:y,id:e}}function D(e,t){return{type:w,id:e,status:t}}function T(e,t){return{type:S,id:e,rows:t}}const I={orders:[],selected:{id:null,number:"",clientName:"",type:"",date:"",notes:"",getAttributeValue:e=>{}}};function O(e,t){return e.map(e=>e.id!==t.id?e:function(e,t){const r=_.cloneDeep(t);return v("pickupStatus",e,r),e!==i.CANCELLED&&e!==i.CONFIRMED&&e!==i.DELIVERED||v("pickupProcessed",1,r),r}(t.status,e)).filter(e=>0===parseInt(e.getAttributeValue("pickupProcessed")))}const C=function e(t,r,n){var o;if("function"==typeof r&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof r&&void 0===n&&(n=r,r=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(e)(t,r)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var i=t,s=r,a=[],d=a,c=!1;function u(){d===a&&(d=a.slice())}function l(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return s}function m(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return u(),d.push(e),function(){if(t){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,u();var r=d.indexOf(e);d.splice(r,1)}}}function b(e){if(!f(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,s=i(s,e)}finally{c=!1}for(var t=a=d,r=0;r<t.length;r++)(0,t[r])();return e}return b({type:h.INIT}),(o={dispatch:b,subscribe:m,getState:l,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");i=e,b({type:h.REPLACE})}})[p.a]=function(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function r(){e.next&&e.next(l())}return r(),{unsubscribe:t(r)}}})[p.a]=function(){return this},e},o}(function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var o=t[n];"function"==typeof e[o]&&(r[o]=e[o])}var i,s=Object.keys(r);try{!function(e){Object.keys(e).forEach(function(t){var r=e[t];if(void 0===r(void 0,{type:h.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===r(void 0,{type:h.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+h.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(r)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var n=!1,o={},a=0;a<s.length;a++){var d=s[a],c=r[d],u=e[d],l=c(u,t);if(void 0===l){var p=b(d,t);throw new Error(p)}o[d]=l,n=n||l!==u}return n?o:e}}({unprocessedOrders:(e=I,t)=>{switch(t.type){case g:return{...e,orders:t.orders};case y:return{...e,selected:e.orders.find(e=>e.id===t.id)};case w:return{...e,orders:O(e.orders,t)};case S:return{...e,orders:e.orders.map(e=>{if(e.id!==t.id)return e;const r=_.cloneDeep(e);return r.rows=t.rows,v("pickupStatus",i.PICKED,r),r})};default:return e}}}));class N extends Error{constructor(e){super(e),this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}}var x=r(3);const k={en:r(4),fr:x},R={eng:"en",lat:"fr"};function L(e,t={}){const r=(n=TSPOS.Model.Config.data.default_language,R[n]||void 0||"en");var n;let o=TSPOS.Model.POS.getCurrentLanguage()||r;return k.hasOwnProperty(o)||(o="en"),function(e,t){if(0===Object.keys(t).length)return e;return e.replace(/({([^}]+)})/g,e=>{const r=e.replace(/{/,"").replace(/}/,"");return t[r]||""})}(k[o][e]||k.en[e]||e,t)}function A(e){switch(e){case i.NEW:return"order.pickup.status.new";case i.PICKING:return"order.pickup.status.picking";case i.PICKED:return"order.pickup.status.picked";case i.CONFIRMED:return"order.pickup.status.confirmed";case i.DELIVERED:return"order.pickup.status.delivered";case i.CANCELLED:return"order.pickup.status.cancelled";default:return""}}class M extends N{constructor(e,t,r={}){super(e),this.code=t.errorCode,this.ctx={status:t,parameters:r}}}class V extends M{constructor(e,t){super(L("erply.api.network.error"),e,t)}}const j={async sendRequest(e,t={}){return t.request=e,(r=ErplyAPI.request(e,t),new Promise((e,t)=>r.then(e,t))).then(e=>e).catch(e=>{if(!e.networkConnected())return Promise.reject(new V(e.getResponseObject().status,t));const r=e.getResponseObject().status;return Promise.reject(new M(r.errorCode,r,t))});var r},find:async(e,t={})=>j.sendRequest(e,t).then(e=>e.getFirstRecord()),async all(e,t={}){t.pageNo=1;let r={};const n=[];let o=!0;for(;o;){const i=await j.sendRequest(e,t),s=await i.getResponseObject();if(r=await s.status,await n.push.apply(n,s.records),t.pageNo++,s.status.recordsTotal<=n.length||0===parseInt(s.status.recordsInResponse))return o=!1,new HTTP_Result({status:r,records:n})}}},F={MAX_RECORDS_PER_PAGE:100,async find(e,t={}){t.id=e,t.getCustomerInformation=1,t.getRowsForAllInvoices=1,t.nonReturnedItemsOnly=1;const[r,n]=await Promise.all([j.find("getSalesDocuments",t),j.all("getInvoicePaymentTypes").then(e=>e.getRecords())]),o=n.find(e=>parseInt(e.id)===parseInt(r.paymentTypeID));return r.paymentTypeInfo=o,r},get:async(e={})=>(e.types="ORDER,CASHINVOICE",e.getCustomerInformation=1,e.getRowsForAllInvoices=1,e.nonReturnedItemsOnly=1,j.sendRequest("getSalesDocuments",e)),async all(e={}){e.types="ORDER,CASHINVOICE",e.recordsOnPage=100,e.getCustomerInformation=1,e.getRowsForAllInvoices=1,e.nonReturnedItemsOnly=1;let[t,r]=await Promise.all([j.all("getSalesDocuments",e),j.all("getInvoicePaymentTypes").then(e=>e.getRecords())]);return r=_.indexBy(r,"id"),t.getRecords().forEach(e=>{e.paymentTypeInfo=r[e.paymentTypeID]||void 0}),t},save:async e=>j.sendRequest("saveSalesDocument",e),async getRecentOrders(e={}){e.orderBy="lastChanged",e.searchAttributeName0="pickupProcessed",e.searchAttributeValue0=1;let[t,r]=await Promise.all([this.get(e).then(e=>e.getRecords()),j.all("getInvoicePaymentTypes").then(e=>e.getRecords())]);return r=_.indexBy(r,"id"),t.forEach(e=>{e.paymentTypeInfo=r[e.paymentTypeID]}),t},async updatePickupStatus(e,t){let r={id:e.id,ignoreLocalSQL:!0,attributeName0:"pickupStatus",attributeType0:"text",attributeValue0:t};return t!==i.CONFIRMED&&t!==i.CANCELLED&&t!==i.DELIVERED||(r={...r,attributeName1:"pickupProcessed",attributeType1:"int",attributeValue1:1}),t===i.CANCELLED&&"ORDER"===e.type&&(r.invoiceState="CANCELLED"),F.save(r)}};const q=({id:e,title:t="",body:r="",actions:n="",footer:o="",dismissable:i=!0,style:s=""})=>`<div class="modal" id="${e}">\n    <div class="modal-dialog" style="${s}">\n      <div class="modal-content">\n        <div class="modal-header">\n          <span class="modal-header-title text-24px">${t}</span>\n          ${i?`\n            <div class="modal-actions pull-right" style="padding-right: 12px;">\n              ${n}\n              <button type="button" class="close">&times;</button>\n            </div>`:""}\n        </div>\n        <div class="modal-body scrollable">\n          ${r}\n        </div>\n        ${o.length>0?`<div class="modal-footer" style="margin-top: 0px;">\n            ${o}\n          </div>`:""}\n      </div>\n    </div>\n  </div>`;function U(e){return"CASHINVOICE"===e.type?void 0===e.paymentTypeInfo?"UNKNOWN":e.paymentTypeInfo.name:L("customer")}function K(e){return 0!==Object.keys(e.dataSalesDocument).length&&(e.dataSalesDocument.id===e.orderID&&e.dataSalesDocument.getAttributeValue("pickupStatus"))}function Y(e,t,r=" "){return e.length>=t?e:((t-=e.length)>r.length&&(r+=r.repeat(t/r.length)),r.slice(0,t)+e)}function W(e){if(!e)return"";const t=new Date(e+" UTC"),r=parseInt(TSPOS.Model.POS.selectedWarehouseID),n=TSPOS.Model.Warehouse.data.find(e=>parseInt(e.warehouseID)===r);let o=null;n&&n.timeZone?o=n.timeZone:Ember.Logger.warn(`Could not find timezone information for ${r}`);let i={year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit"};o&&(i.timeZone=o);const s=t.toLocaleDateString("en-US",i),a=new Date(s);return`${a.getFullYear()}-${Y((a.getMonth()+1).toString(),2,"0")}-${Y(a.getDate().toString(),2,"0")} ${Y(a.getHours().toString(),2,"0")}:${Y(a.getMinutes().toString(),2,"0")}`}function H(){return TSPOS.Model.Config.data.locale_uses_price_with_tax||0}const G=({order:e})=>`<!DOCTYPE html>\n  <html lang="en">\n  <head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>${L("order.print.title")}</title>\n    <style>\n      #page {\n        width: 100%;\n        margin: 0 auto;\n      }\n\n      #order-info th {\n        text-align: left;\n      }\n\n      #order-info th, #order-info td {\n        padding: 6px;\n      }\n\n      #products {\n        width: 100%;\n        border-collapse: collapse;\n      }\n\n      #products {\n        margin-top: 50px;\n      }\n\n      #products th {\n        text-align: left;\n        border-top: 2px solid black;\n        border-bottom: 1px solid black;\n      }\n\n      #products td, #products th {\n        padding: 8px;\n      }\n    </style>\n  </head>\n  <body>\n    <div id="page">\n      <h2>\n        ${L("order.with.number",{number:_.escape(e.number)})} (${U(e)})\n      </h2>\n      <hr>\n      <div>\n        <table id="order-info">\n          <tbody>\n            <tr>\n              <th>${L("order.pickup.type")}</th>\n              <td>${_.escape(U(e))}</td>\n            </tr>\n            <tr>\n              <th>${L("customer")}</th>\n              <td>${_.escape(e.clientName)}</td>\n            </tr>\n            <tr>\n              <th>${L("customer.card.number")}</th>\n              <td>${_.escape(e.clientCardNumber)}</td>\n            </tr>\n            <tr>\n              <th>${L("order.date")}</th>\n              <td>${_.escape(e.date)}</td>\n            </tr>\n            <tr>\n              <th>${L("order.reference.no")}</th>\n              <td>${_.escape(e.referenceNumber)}</td>\n            </tr>\n            <tr>\n              <th>${L("order.pickup.date.time")}</th>\n              <td>${_.escape(W(e.getAttributeValue("pickupDateTime")))}</td>\n            </tr>\n            <tr>\n              <th>${L("order.delivery.date.time")}</th>\n              <td>${_.escape(W(e.getAttributeValue("deliveryDateTime")))}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <table id="products">\n        <thead>\n          <tr>\n            <th>${L("order.row.product.code")}</th>\n            <th>${L("order.row.product.description")}</th>\n            <th>${L("order.row.price")}</th>\n            <th>${L("order.row.quantity")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${e.rows.map(e=>`\n            <tr>\n              <td>${_.escape(e.code)}</td>\n              <td>${_.escape(e.itemName)}</td>\n              <td>${_.escape(H()?e.finalPriceWithVAT:e.finalNetPrice)}</td>\n              <td>${_.escape(e.amount)}</td>\n            </tr>`).join("")}\n        </tbody>\n      </table>\n      <p>${L("order.print.notes",{notes:_.escape(e.notes)})}</p>\n    </div>\n  </body>\n  </html>\n`;var z=r(0),B=r.n(z);function Q(e){return e.rows.reduce((e,t)=>{const r=new B.a(t.finalNetPrice).times(new B.a(t.amount)),n=new B.a(t.finalPriceWithVAT).times(new B.a(t.amount));return e.netTotal=e.netTotal.plus(r),e.total=e.total.plus(n),e},{netTotal:new B.a(0),total:new B.a(0)})}const Z=({order:e})=>{const t=Q(e);return $(q({id:"onm-view-recent-order",title:`<span>${L("order.with.number",{number:e.number})}</span>`,body:`<div>\n      <div>\n        <table class="table table-white table-customer">\n          <tr>\n            <td><strong>${L("order.number")}</strong></td>\n            <td>${_.escape(e.number)}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.pickup.type")}</strong></td>\n            <td>${_.escape(U(e))}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.date.created")}</strong></td>\n            <td>${_.escape(e.date)}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.pickup.date.time")}</strong></td>\n            <td>${_.escape(W(e.getAttributeValue("pickupDateTime")))}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.delivery.date.time")}</strong></td>\n            <td>${_.escape(W(e.getAttributeValue("deliveryDateTime")))}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("customer")}</strong></td>\n            <td>${_.escape(e.clientName)}</td>\n          </tr>\n          <tr>\n              <td><strong>${L("customer.card.number")}</strong></td>\n              <td>${_.escape(e.clientCardNumber)}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.status")}</strong></td>\n            <td id="onm-view-order-status">\n              ${_.escape(L(A(e.getAttributeValue("pickupStatus"))))}\n            </td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.return.documents")}</strong></td>\n            <td>${_.escape(e.getAttributeValue("returnDocumentNumbers")||"")}</td>\n          </tr>\n          <tr>\n            <td><strong>${L("order.notes")}</strong></td>\n            <td>${_.escape(e.notes)}</td>\n          </tr>\n        </table>\n      </div>\n      <div>\n        <table class="table table-striped">\n          <tr>\n            <th>${L("order.row.product.name")}</th>\n            <th>${L("order.row.quantity")}</th>\n            <th>${L("order.row.price")}</th>\n            <th>${L("order.row.total")}</th>\n          </tr>\n          ${e.rows.map(e=>(({row:e})=>{const t=new B.a(H()?e.finalPriceWithVAT:e.finalNetPrice),r=new B.a(e.amount).times(t);return`<tr>\n    <td>${_.escape(e.itemName)}</td>\n    <td>${_.escape(e.amount)}</td>\n    <td>${t.toFixed(2)}</td>\n    <td>${r.toFixed(2)}</td>\n  </tr>`})({row:e})).join("")}\n        </table>\n        <hr/>\n        <p class="text-right">\n          ${L("order.subtotal.with.value",{value:t.netTotal.toFixed(2)})}\n        </p>\n        <p class="text-right">\n          ${L("order.tax.total.with.value",{value:t.total.minus(t.netTotal).toFixed(2)})}\n        </p>\n        <p class="text-right bold">\n          ${L("order.total.with.value",{value:t.total.toFixed(2)})}\n        </p>\n      </div>\n    </div>`,dismissable:!0}))};function X(e,t,r=2.5){return e.setError().setMessage(t),r&&e.delayedClose(r),e}const J=({orders:e})=>{const t=$(q({id:"onm-recent-orders",title:L("orders.list.title"),body:`\n      <div class="toggle-button-actions">\n        <div>\n          <button type="button" style="width:50%!important" class="btn btn-transparent bold" id="onm-current-button">\n            ${L("orders.tab.unfinished")}\n          </button>\n          <button type="button" style="width:50%!important" class="btn bold btn-transparent active" id="onm-history-button">\n            ${L("orders.tab.history")}\n          </button>\n        </div>\n      </div>\n      <table id="onm-recent-orders-table" class="table table-white">\n        <thead>\n          <tr>\n            <th data-sort="int">${L("order.number")}</th>\n            <th data-sort="string">${L("order.date.created")}</th>\n            <th data-sort="string">${L("order.pickup.date.time")}</th>\n            <th data-sort="string">${L("customer")}</th>\n            <th data-sort="string">${L("order.pickup.type")}</th>\n            <th>${L("order.action.heading")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${e.map(e=>(({order:e})=>`<tr data-id="${e.id}" style="cursor: default;">\n    <td class="onm-history-view-order pointer" style="text-decoration: underline;">${_.escape(e.number)}</td>\n    <td>${_.escape(e.date)}</td>\n    <td>${_.escape(W(e.getAttributeValue("pickupDateTime")))}</td>\n    <td>${_.escape(e.clientName)}</td>\n    <td>${_.escape(U(e))}</td>\n    <td class="recent-order-print" style="text-align: center; color: #999; cursor: pointer;">\n      <i class="icon_printer text-24px onm-print-recent-order"></i>\n    </td>\n  </tr>`)({order:e})).join("")}\n        </tbody>\n      </table>\n    `}));t.addClass("customer-add-modal"),t.find(".recent-order-print").hover(function(){$(this).css({color:"black"})},function(){$(this).css({color:"#999"})});return t.find(".onm-print-recent-order").on("click",async t=>{const r=$(t.target).closest("tr").data("id"),n=e.find(e=>parseInt(e.id)===parseInt(r)),o=ERPLY.Alert(L("order.print.action.progress"));if("ORDER"===n.type){const e=n.followUpDocuments.map(e=>e.id);if(0===e.length)return void X(o,L("order.print.receipts.missing"));let t;try{t=(await j.sendRequest("getSalesDocuments",{ids:e.join(",")})).getRecords()}catch(e){return void X(o,L("order.print.receipts.fetch.error"))}try{t.forEach(e=>TSPOS.Print.printData({url:e.invoiceLink,payload:{warehouseName:e.warehouseName,warehouseID:e.warehouseID,posName:e.pointOfSaleName||TSPOS.Model.POS.name,invoiceNo:e.number,type:e.type,documentType:e.type,customerName:e.clientName,customerID:e.clientID,customerCardNumber:e.clientCardNumber,employeeName:e.employeeName,notes:e.notes,items:e.rows,dateTime:e.date+" "+e.time,netTotal:e.netTotal,total:e.total}}))}catch(e){return Ember.Logger.error(e),void X(o,L("order.print.action.failure"))}}else try{TSPOS.Print.printData({url:n.invoiceLink,payload:{warehouseName:n.warehouseName,warehouseID:n.warehouseID,posName:n.pointOfSaleName,invoiceNo:n.number,type:n.type,customerName:n.clientName,customerID:n.clientID,customerCardNumber:n.clientCardNumber,employeeName:n.employeeName,notes:n.notes,items:n.rows,dateTime:n.date+" "+n.time,netTotal:n.netTotal,total:n.total}})}catch(e){return Ember.Logger.error(e),void X(o,L("order.print.action.failure"))}o.delayedClose(2.5)}),t.find("#onm-current-button").on("click",()=>{n({viewType:s,modal:!1,dismiss:!1})}),t.find(".onm-history-view-order").on("click",t=>{const r=$(t.target).closest("tr").data("id"),n=e.find(e=>parseInt(e.id)===parseInt(r));o({viewType:"onm-view-finished-order",dismiss:!1,modal:!1,content:Z({order:n})}).on("close",async()=>{o({viewType:u,dismiss:!0,modal:!1,content:J({orders:e})})})}),t.find("#onm-recent-orders-table").stupidtable(),t};class ee{constructor(e){this.store=e,this.html=$(q({id:"order-notifications-unprocessed-orders",title:L("orders.list.title"),actions:`\n        <button type="button" class="btn-save-view bold text-uppercase" id="onm-refresh-button">\n          ${L("orders.list.refresh.button")}\n        </button>\n      `,body:`\n      <table id="onm-unfulfilled-orders-table" class="table table-white">\n        <thead>\n          <tr>\n            <th data-sort="int">${L("order.number")}</th>\n            <th data-sort="string">${L("order.pickup.date.time")}</th>\n            <th data-sort="string">${L("customer")}</th>\n            <th data-sort="string">${L("order.status")}</th>\n            <th data-sort="string">${L("order.pickup.type")}</th>\n            <th data-sort="string">${L("order.action.heading")}</th>\n          </tr>\n         </thead>\n        <tbody id="onm-unfulfilled-orders">\n        </tbody>\n      </table>`})),this.html.addClass("customer-add-modal"),this.sortedIndex=0,this.sortingDirection="desc",TSPOS.EventManager.addEventListener("onm_after_orders_update",()=>{(function(e){return!!TSPOS.UI.openViews.find(t=>t.originalParams.viewType===e)})(s)&&this.render()})}render(){const e=this.html.find(".modal-body"),t=this.store.getState().unprocessedOrders.orders,r=$(`\n      <span class="modal-header-title text-24px">${L("orders.list.title")}</span>\n      <div class="modal-actions pull-right">\n        <button type="button" class="btn-save-view bold text-uppercase" id="onm-refresh-button">\n          ${L("orders.list.refresh.button")}\n        </button>\n        <button type="button" class="close">Ã—</button>\n      </div>\n    `);this.html.find(".modal-header").html(r);const n=$(`\n    <div class="toggle-button-actions">\n      <div>\n        <button type="button" style="width:50%!important" class="btn btn-transparent bold active">\n          ${L("orders.tab.unfinished")}\n        </button>\n        <button type="button" style="width:50%!important" class="btn bold btn-transparent" id="onm-history-button">\n          ${L("orders.tab.history")}\n        </button>\n      </div>\n    </div>\n      <table id="onm-unfulfilled-orders-table" class="table table-white">\n        <thead>\n          <tr>\n            <th data-sort="int">${L("order.number")}</th>\n            <th data-sort="string">${L("order.pickup.date.time")}</th>\n            <th data-sort="string">${L("customer")}</th>\n            <th data-sort="string">${L("order.status")}</th>\n            <th data-sort="string">${L("order.pickup.type")}</th>\n            <th data-sort="string">${L("order.action.heading")}</th>\n          </tr>\n        </thead>\n        <tbody id="onm-unfulfilled-orders">\n          ${t.map(e=>`\n          <tr data-order-id="${e.id}" style="cursor: default;">\n            <td class="onm-view-order pointer" style="text-decoration: underline;">${e.number}</td>\n            <td>${W(e.getAttributeValue("pickupDateTime"))}</td>\n            <td>${e.clientName}</td>\n            <td>${L(A(e.getAttributeValue("pickupStatus")))}</td>\n            <td>${U(e)}</td>\n            <td>\n              <button type="button" class="btn onm-table-action" style="white-space: normal; max-width: 110px;">\n                ${L(function(e){switch(e){case i.NEW:return"order.action.start.picking";case i.PICKING:return"order.action.finish.picking";case i.PICKED:return"order.action.confirm";case i.CANCELLED:return"order.action.move.history";default:return""}}(e.getAttributeValue("pickupStatus")))}\n              </button>\n            </td>\n          </tr>\n          `).join("")}\n        </tbody>\n      </table>\n    `);return n.find("thead th").eq(this.sortedIndex).attr("data-sort-onload","yes"),n.find("thead th").eq(this.sortedIndex).attr("data-sort-default",this.sortingDirection),n.bind("aftertablesort",(e,t)=>{this.sortedIndex=t.column,this.sortingDirection=t.direction}),n.stupidtable(),$("body").off("click",".onm-view-order"),$("body").off("click",".onm-table-action"),$("body").off("click","#onm-refresh-button"),$("body").off("click","#onm-history-button"),$("body").on("click",".onm-view-order",this.handleRowClick.bind(this)),$("body").on("click",".onm-table-action",this.handleActionClick.bind(this)),$("body").on("click","#onm-refresh-button",this.refreshList.bind(this)),$("body").on("click","#onm-history-button",this.handleHistoryClick.bind(this)),e.html(n),this.html}async handleHistoryClick(e){let t=[];const r=ERPLY.Alert(L("orders.fetch.recent.orders"));try{t=await F.getRecentOrders({orderBy:"lastChanged",orderByDir:"desc",getCustomerInformation:1,recordsOnPage:20})}catch(e){return Ember.Logger.error(e,e.ctx),void X(r,L("orders.fetch.recent.orders.error",{error:e.message}))}r.close(),o({viewType:u,dismiss:!0,modal:!1,content:J({orders:t})})}handleRowClick(e){const t=$(e.target).closest("tr").data("order-id");this.store.dispatch(P(t)),n({viewType:a,dismiss:!0,modal:!1})}async refreshList(){const e=ERPLY.Alert(L("orders.fetch.unprocessed.orders"));let t;try{t=await F.all({warehouseID:TSPOS.Model.POS.selectedWarehouseID,confirmed:1,searchAttributeName0:"pickupProcessed",searchAttributeValue0:0}),this.store.dispatch(E(t.getRecords())),TSPOS.EventManager.runEventListener("onm_after_orders_update",{orders:t.getRecords()})}catch(t){return Ember.Logger.error(t,t.ctx),void X(e,L("orders.fetch.unprocessed.orders.error",{error:t.message}))}e.close()}async handleActionClick(e){const t=$(e.target).closest("tr").data("order-id"),r=this.store.getState().unprocessedOrders.orders.find(e=>parseInt(e.id)===parseInt(t));switch(r.getAttributeValue("pickupStatus")){case i.NEW:await this.printPickingList(r);break;case i.PICKING:await this.finishPicking(r);break;case i.PICKED:await this.confirmOrder(r);break;case i.CANCELLED:await this.moveCancelledOrderToHistory(r)}}async printPickingList(e){const t=ERPLY.Alert(L("order.print.generate"));try{!function(e){const t=window.open();t.opener=null,t.document.write(e),t.focus(),t.print(),t.close()}(G({order:e}))}catch(e){return Ember.Logger.error(e),void X(t,L("order.print.generate.error"))}t.setMessage(L("order.save.action.text"));try{await F.updatePickupStatus(e,i.PICKING),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:e,status:i.PICKING}),t.close()}catch(e){Ember.Logger.error(e,e.ctx),X(t,L("order.save.action.error",{error:e.message}))}t.close()}async finishPicking(e){this.store.dispatch(P(e.id)),n({viewType:d,dismiss:!0,modal:!0})}async confirmOrder(e){if("ORDER"===e.type)!function(e){TSPOS.Model.Document.init(),TSPOS.Model.Document.preventApplyPromotions=!0,TSPOS.Model.Customer.id=e.clientID,TSPOS.Model.Customer.name=e.clientName,TSPOS.Model.Customer.email=e.clientEmail,TSPOS.Model.Document.number=e.number,TSPOS.Model.Customer.setCustomerNameInfo(e.clientName),TSPOS.Model.Customer.setCustomerEmailInfo(e.clientEmail),TSPOS.Model.Customer.getAndSetCustomer(e.clientID),TSPOS.Model.Document.warehouseID=e.warehouseID,TSPOS.Model.Document.notes=e.notes,TSPOS.Model.Document.internalNotes=e.internalNotes,TSPOS.Model.Document.orderID=e.id,TSPOS.Model.Document.dataSalesDocument=e,e.paid>0&&(TSPOS.Model.Document.orderPaid=parseFloat(e.paid)),TSPOS.Model.Document.employeeID=e.employeeID,(TSPOS.Model.Document.notes.length>0||TSPOS.Model.Document.internalNotes.length>0)&&TSPOS.UI.setUIFlag('[data-function="document-notes"]',!0),TSPOS.Model.Document.taxExemptCertificateNumber=e.taxExemptCertificateNumber,TSPOS.Model.Document.taxExemptCertificateNumber.length>0&&TSPOS.UI.setUIFlag('[data-function="tax-exempt"]',!0),TSPOS.Model.Document.APIFieldsCompat(e),TSPOS.Model.Document.filterContainers(e.rows);const t=e.rows.map(e=>((e._isContainer||TSPOS.Model.Config.getBoolean("touchpos_order_pickup_recalculates_prices"))&&(e.manualDiscount=0),TSPOS.Model.Document.addProduct(e),e.productID));TSPOS.Model.Document.queueApplyPromotions(),TSPOS.Model.Document.preventApplyPromotions=!1,TSPOS.Model.Document.getProductsDataOnExistingDocument(t)}(e),TSPOS.UI.closeCurrentView(),$("#button-return").addClass("hidden"),$("#button-nosale").removeClass("hidden");else{const t=ERPLY.Alert(L("order.save.action.text"));try{TSPOS.Print.printData({url:e.invoiceLink,payload:{warehouseName:e.warehouseName,warehouseID:e.warehouseID,posName:e.pointOfSaleName,invoiceNo:e.number,type:e.type,customerName:e.clientName,customerID:e.clientID,customerCardNumber:e.clientCardNumber,employeeName:e.employeeName,notes:e.notes,items:e.rows,dateTime:e.date+" "+e.time,netTotal:e.netTotal,total:e.total}}),await F.updatePickupStatus(e,i.CONFIRMED),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:e,status:i.CONFIRMED})}catch(e){return Ember.Logger.error(e,e.ctx),void X(t,L("order.save.action.error",{error:e.message}))}t.close()}}async moveCancelledOrderToHistory(e){const t=ERPLY.Alert(L("order.save.action.text"));try{await F.save({id:e.id,attributeName0:"pickupProcessed",attributeType0:"int",attributeValue0:1,ignoreLocalSQL:!0}),this.store.dispatch(D(e.id,i.CANCELLED)),TSPOS.EventManager.runEventListener("onm_after_orders_update",{orders:this.store.getState().unprocessedOrders.orders})}catch(e){return Ember.Logger.error(e,e.ctx),void X(t,L("order.save.action.error",{error:e.message}))}t.close()}}const te=({row:e})=>{const t=new B.a(H()?e.finalPriceWithVAT:e.finalNetPrice),r=new B.a(e.amount).times(t);return`<tr>\n    <td>${_.escape(e.itemName)}</td>\n    <td>${_.escape(e.amount)}</td>\n    <td>${t.toFixed(2)}</td>\n    <td>${r.toFixed(2)}</td>\n  </tr>`},re=({order:e,value:t})=>`<select class="form-control mx-sm-3" name="onm-edit-pickup-status">\n  ${Object.keys(i).filter(t=>i[t]!==i.CONFIRMED&&i[t]!==i.DELIVERED&&(i[t]!==i.CANCELLED||"CASHINVOICE"!==e.type)).map(e=>`<option value="${e}" ${i[e]===t?"selected":""}>\n        ${L(A(i[e]))}\n      </option>`).join("")}\n  </select>`;class ne{constructor(e){this.store=e,this.html=$("<div></div>")}render(){const e=this.store.getState().unprocessedOrders.selected,t=Q(e);return this.html.find(".btn-save-view").off("click"),this.html=$(q({id:"onm-view-order",title:`<span>${L("order.with.number",{number:e.number})}<span>`,actions:`\n        <button type="button" class="btn-save-view bold text-uppercase">\n          ${L("order.action.save")}\n        </button>\n      `,body:`\n        <div>\n          <div>\n            <table class="table table-white table-customer">\n              <tr>\n                <td><strong>${L("order.number")}</strong></td>\n                <td>${_.escape(e.number)}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.pickup.type")}</strong></td>\n                <td>${U(e)}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.date.created")}</strong></td>\n                <td>${_.escape(e.date)}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.pickup.date.time")}</strong></td>\n                <td>${_.escape(W(e.getAttributeValue("pickupDateTime")))}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.delivery.date.time")}</strong></td>\n                <td>${_.escape(W(e.getAttributeValue("deliveryDateTime")))}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("customer")}</strong></td>\n                <td>${_.escape(e.clientName)}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("customer.card.number")}</strong></td>\n                <td>${_.escape(e.clientCardNumber)}</td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.status")}</strong></td>\n                <td id="onm-view-order-status">\n                  ${re({order:e,value:e.getAttributeValue("pickupStatus")})}\n                </td>\n              </tr>\n              <tr>\n                <td><strong>${L("order.notes")}</strong></td>\n                <td>${_.escape(e.notes)}</td>\n              </tr>\n            </table>\n          </div>\n          <div>\n            <table class="table table-striped">\n              <tr>\n                <th>${L("order.row.product.name")}</th>\n                <th>${L("order.row.quantity")}</th>\n                <th>${L("order.row.price")}</th>\n                <th>${L("order.row.total")}</th>\n              </tr>\n              ${e.rows.map(e=>te({row:e})).join("")}\n            </table>\n            <hr/>\n            <p class="text-right">\n              ${L("order.subtotal.with.value",{value:t.netTotal.toFixed(2)})}\n            </p>\n            <p class="text-right">\n              ${L("order.tax.total.with.value",{value:t.total.minus(t.netTotal).toFixed(2)})}\n            </p>\n            <p class="text-right bold">\n              ${L("order.total.with.value",{value:t.total.toFixed(2)})}\n            </p>\n          </div>\n        </div>`,dismissable:!0})),this.html.find(".close").on("click",e=>this.onClose(e)),this.html.find(".btn-save-view").on("click",e=>this.onSave(e)),this.html}async onSave(e){const t=this.store.getState().unprocessedOrders.selected,r=this.html.find('[name="onm-edit-pickup-status"]').val();if(r!==t.getAttributeValue("pickupStatus")){const e=ERPLY.Alert(L("order.save.action.text"));try{await F.updatePickupStatus(t,r),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:t,status:r}),e.close()}catch(t){return Ember.Logger.error(t,t.ctx),void X(e,L("order.save.action.error",{error:t.message}))}}n({viewType:s,dismiss:!0,modal:!1})}onClose(){n({viewType:s,dismiss:!0,modal:!1})}}class oe{constructor(e){this.store=e,this.html=$("<div></div>")}render(){return this.html=$(q({id:"onm-picking-confirmation",title:L("order.picking.title"),dismissable:!0,body:`<h4>${L("order.picking.text")}</h4>`,footer:`\n          <button id="onm-confirm-yes" class="btn btn-save-view bold text-uppercase">${L("confirm.yes")}</button>\n          <button id="onm-confirm-no" class="btn btn-cancel bold text-uppercase">${L("confirm.no")}</button>`})),this.html.on("click","#onm-confirm-yes",e=>this.onYes(e)),this.html.on("click","#onm-confirm-no",e=>this.onNo(e)),this.html}async onYes(e){const t=this.store.getState().unprocessedOrders.selected,r=ERPLY.Alert(L("order.save.action.text"));try{await F.updatePickupStatus(t,i.PICKED),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:t,status:i.PICKED})}catch(e){return Ember.Logger.error(e,e.ctx),void X(r,L("order.save.action.error",{error:e.message}))}r.close(),TSPOS.UI.closeCurrentView(),n({viewType:s,dismiss:!0,modal:!1})}onClose(){n({viewType:s,dismiss:!0,modal:!1})}async onNo(){const e=this.store.getState().unprocessedOrders.selected;if("ORDER"===e.type)TSPOS.UI.closeCurrentView(),n({viewType:c,dismiss:!0,modal:!1});else{let t=[];try{t=(await j.sendRequest("getPayments",{documentID:e.id})).getRecords()}catch(e){}if(0===t.length)return ERPLY.Error(L("order.invalid.cashinvoice.error")).delayedClose(4),void TSPOS.UI.closeCurrentView();TSPOS.UI.closeCurrentView(),TSPOS.Model.Document.documentReturn(),$("body").find("#search-return-document-field").val(e.number),setTimeout(()=>{$("body").find(".search-return-document").trigger("click")},100)}}}const ie=({row:e})=>`<tr data-row-id="${e.rowID}">\n    <td>${_.escape(e.code)}</td>\n    <td>${_.escape(e.itemName)}</td>\n    <td>\n      <input type="text"\n        name="onm-order-row-amount"\n        class="form-control input-sm"\n        value="${_.escape(e.amount)}"/>\n    </td>\n    <td>\n      <button class="btn onm-order-edit-remove-row onm-remove">\n        ${L("order.action.remove")}\n      </button>\n    </td>\n  </tr>`;class se{constructor(e){this.store=e,this.html=$("<div></div>")}render(){const e=this.store.getState().unprocessedOrders.selected;return this.html.off("click"),this.html=$(q({id:"onm-edit-order",title:`\n        <span id="onm-edit-order-${e.id}">\n          ${L("order.edit.title",{number:e.number})}\n        </span>`,actions:`\n        <button type="button" class="btn-save-view bold text-uppercase">\n          ${L("order.action.save")}\n        </button>\n      `,body:`\n        <table id="onm-edit-order-table" class="table table-white">\n          <thead>\n            <th>${L("order.row.product.code")}</th>\n            <th>${L("order.row.product.name")}</th>\n            <th>${L("order.row.quantity")}</th>\n            <th>${L("order.edit.actions")}</th>\n          </thead>\n          <tbody id="onm-order-edit-rows">\n            ${e.rows.map(e=>ie({row:e})).join("")}\n          </tbody>\n        </table>\n      `,dismissable:!0})),this.html.on("click",".btn-save-view",e=>this.onSave(e)),this.html.on("click",".onm-order-edit-remove-row",e=>this.onRowRemove(e)),this.html}onRowRemove(e){const t=$(e.target),r=t.closest("tr");r.hasClass("onm-removed")?(t.text(L("order.action.remove")),r.removeClass("onm-removed"),r.css({"text-decoration":"none"})):(t.text(L("order.action.add.back")),r.addClass("onm-removed"),r.css({"text-decoration":"line-through"}))}async onSave(e){const t=this.store.getState().unprocessedOrders.selected;let r=[],n=this.html.find("[data-row-id]").map(function(){let e;e=$(this).hasClass("onm-removed")?0:$(this).find('[name="onm-order-row-amount"]').val();const r=_.cloneDeep(t.rows.find(e=>parseInt(e.rowID)===parseInt($(this).data("row-id"))));return r.amount=e,r}).get().filter(e=>e.amount>0||(r.push(e.code),!1));if(0!==r.length){let e=L("order.edit.confirmation.plu.remove",{pluList:r.join(", ")});0===n.length&&(e+=" "+L("order.edit.confirmation.order.cancelled")),ERPLY.Confirm({title:L("order.edit.confirmation.title"),body:e+" "+L("order.edit.confirmation.confirmation.text"),buttons:["yes","cancel"],"on.yes":()=>{this.saveEditedOrder(n,t)}}),$("#confirmation-modal .modal-content").css({border:"1px solid rgba(0, 0, 0, 0.2)"}),$("#confirmation-modal .button-cancel").css({height:"48px"}),$("#confirmation-modal .button-yes").css({height:"48px"})}else await this.saveEditedOrder(n,t)}async saveEditedOrder(e,t){const r=ERPLY.Alert(L("order.save.action.text"));if(0===e.length)try{await F.updatePickupStatus(t,i.CANCELLED),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:t,status:i.CANCELLED})}catch(e){return Ember.Logger.error(e,e.ctx),void X(r,L("order.save.action.error",{error:e.message}))}else try{await F.save(Object.assign({id:t.id,attributeName0:"pickupStatus",attributeType0:"text",attributeValue0:i.PICKED,ignoreLocalSQL:!0},function(e){const t={};return e.forEach((e,r)=>{for(const n in e)e.hasOwnProperty(n)&&(t[`${n}${r}`]=e[n])}),t}(e.map(e=>({productID:e.productID,amount:e.amount}))))),this.store.dispatch(T(t.id,e))}catch(e){return Ember.Logger.error(e,e.ctx),void X(r,L("order.save.action.error",{error:e.message}))}r.close(),n({viewType:s,modal:!1,dismiss:!0})}onClose(){n({viewType:s,modal:!1,dismiss:!0})}}window.onm={views:{},currentDocument:null,cashInvoiceReturn:{document:null,returnDocument:null}},window.onm.views[s]=new ee(C),window.onm.views[a]=new ne(C),window.onm.views[d]=new oe(C),window.onm.views[c]=new se(C),TSPOS.EventManager.addEventListener("before_document_save",async function(e){window.onm.currentDocument=TSPOS.Model.Document;const t=window.onm.cashInvoiceReturn.document;if(null!==t&&function(e){return e.filter(e=>(function(e){return void 0!==e.requestName&&void 0!==e.type&&"saveSalesDocument"===e.requestName&&"CREDITINVOICE"===e.type})(e)&&e.creditToDocumentID===window.onm.cashInvoiceReturn.document.id).length>0}(e)){!function(e){for(const t of e)"saveSalesDocument"===t.requestName?(delete t.paymentType,delete t.pointOfSaleID,t.paymentTypeID=window.onm.cashInvoiceReturn.document.paymentTypeID):"savePayment"===t.requestName&&(delete t.cashChange,delete t.cashPaid,delete t.type,t.typeID=window.onm.cashInvoiceReturn.document.payments[0].typeID)}(e);let r=t.getAttributeValue("returnDocumentNumbers");const n=e.find(e=>"saveSalesDocument"===e.requestName).invoiceNo+"K";r?r+=","+n:r=n;try{await F.save({id:t.id,ignoreLocalSQL:!0,attributeName0:"pickupStatus",attributeType0:"text",attributeValue0:i.PICKED,attributeName1:"returnDocumentNumbers",attributeType1:"text",attributeValue1:r});const e=await F.find(t.id,{});C.dispatch(T(e.id,e.rows)),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:e,status:i.PICKED})}catch(e){Ember.Logger.error(e,e.ctx)}}e.find(e=>"saveSalesDocument"===e.requestName&&e.hasOwnProperty("baseDocumentID")&&e.baseDocumentID===TSPOS.Model.Document.dataSalesDocument.id&&(void 0===e.deleted||0===e.deleted)&&K(TSPOS.Model.Document))&&!e.find(e=>"savePayment"===e.requestName)&&(e.push({requestName:"saveSalesDocument",id:TSPOS.Model.Document.dataSalesDocument.id,attributeName0:"pickupProcessed",attributeType0:"int",attributeValue0:1,attributeName1:"pickupStatus",attributeType1:"text",attributeValue1:i.DELIVERED}),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:TSPOS.Model.Document.dataSalesDocument,status:i.DELIVERED})),Ember.Logger.log(e)}),TSPOS.EventManager.addEventListener("after_document_save",async function(){const e=window.onm.currentDocument;K(e)&&setTimeout(async()=>{try{await F.updatePickupStatus(e.dataSalesDocument,i.DELIVERED),TSPOS.EventManager.runEventListener("onm_after_order_status_update",{order:e.dataSalesDocument,status:i.DELIVERED})}catch(e){Ember.Logger.error(e,e.ctx)}},500)}),TSPOS.EventManager.addEventListener("document_return_save_action",async function(e){const t=(await ErplyAPI.getSalesDocuments({id:e})).getFirstRecord();var r;"CASHINVOICE"===(r=t).type&&r.getAttributeValue("deliveryDateTime")&&(t.payments=_.cloneDeep(TSPOS.Model.Document.dataPayments),window.onm.cashInvoiceReturn.document=t)}),TSPOS.EventManager.addEventListener("view_loaded",function(e,t){t.viewType===s&&e.css("display","block")}),TSPOS.EventManager.addEventListener("onm_after_order_status_update",({order:e,status:t})=>{C.dispatch(D(e.id,t)),TSPOS.EventManager.runEventListener("onm_after_orders_update",{orders:C.getState().unprocessedOrders.orders})}),$(()=>{0===$(".app-header-nav #onm-notification-button-container").length&&$(".app-header-nav").prepend(new l(C).render());const e=document.querySelector("#payment-modal .payment-change-label + span.pull-right");new MutationObserver(e=>{e.forEach(e=>{parseFloat(e.target.innerText)<0&&K(TSPOS.Model.Document)?$('button[data-action="payment-confirm"]').addClass("disabled"):parseFloat(e.target.innerText)>=0&&K(TSPOS.Model.Document)&&$('button[data-action="payment-confirm"]').removeClass("disabled")})}).observe(e,{childList:!0})}),new class{constructor(e){this.store=e,this.interval=null,this.timestamp=0}async findUnprocessedOrders(){let e;try{e=await F.all({warehouseID:TSPOS.Model.POS.selectedWarehouseID,confirmed:1,searchAttributeName0:"pickupProcessed",searchAttributeValue0:0})}catch(e){return void Ember.Logger.error(e,e.ctx)}if(0!==this.timestamp){const t=this.store.getState().unprocessedOrders.orders,r=e.getRecords().filter(e=>!t.find(t=>t.id===e.id));if(0!==r.length){const e=$(".notification-center .dropdown-menu");let t="";if(t=r.map(e=>`\n            <li>\n              <div class="row">\n                <div class="col-md-6">\n                  #${e.number}\n                </div>\n                <div class="col-md-6 text-right">\n                  ${parseFloat(e.total).toFixed(2)}\n                </div>\n              </div>\n            </li>\n          `).join(""),0===e.length){$(".notification-center-icon").click();const e=`\n            <li>\n              <span class="bold">${L("orders.update.new.orders")}</span>\n            </li>\n          `;$(".notification-center-items").html(e+t)}else $(".notification-center-items").append(t)}}this.store.dispatch(E(e.getRecords())),TSPOS.EventManager.runEventListener("onm_after_orders_update",{orders:e.getRecords()}),this.timestamp=e.getTimestamp()}check(e){this.interval||this.findUnprocessedOrders(),this.interval=setInterval(()=>this.findUnprocessedOrders(),e)}}(C).check(6e4)}]);
